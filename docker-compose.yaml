version: '3.8'

services:
  # PostgreSQL Service
  postgres:
    image: postgres:latest
    container_name: Postgres
    restart: always
    network_mode: "host"
    environment:
      POSTGRES_USER: akash
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: myPostgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis Service
  redis:
    image: redis:latest
    container_name: Redis
    restart: always
    network_mode: "host"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Zookeeper Service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: Zookeeper
    restart: always
    network_mode: "host"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Store Service
  store-service:
    image: akashmishrax/storeservice:latest
    container_name: StoreService
    restart: always
    network_mode: "host"
    environment:
      STORE_SERVICE_PORT: 3000
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      DATABASE_URL: "postgresql://akash:1234@localhost:5432/myPostgres?schema=public"
      NODE_ENV: development
      LOG_LEVEL: info
      STORE_SERVICE_URL: http://localhost:3000

  # Executor Service
  executor-service:
    image: akashmishrax/executorservice:latest
    container_name: ExecutorService
    restart: always
    network_mode: "host"
    environment:
      ZOOKEEPER_HOST: localhost:2181
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      DATABASE_URL: "postgresql://akash:1234@localhost:5432/myPostgres?schema=public"
      NODE_ENV: development

  # Scheduler Service
  scheduler-service:
    image: akashmishrax/schedulerservice:latest
    container_name: SchedulerService
    restart: always
    network_mode: "host"
    environment:
      ZOOKEEPER_HOST: localhost:2181
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      DATABASE_URL: "postgresql://akash:1234@localhost:5432/myPostgres?schema=public"
      NODE_ENV: development

volumes:
  postgres_data:
  redis_data:
